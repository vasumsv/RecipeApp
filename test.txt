// ===== EDIT SCENARIO =====
private String createdInvoiceUuid; // To store the UUID from creation response

@Given("I have a successfully created invoice")
public void storeCreatedInvoice() {
    assertNotNull(responseEntity);
    assertNotNull(responseEntity.getBody());
    
    // Store both the complete invoice and its UUID
    originalInvoice = responseEntity.getBody();
    createdInvoiceUuid = originalInvoice.getId().toString(); // Get UUID from response
    
    logger.info("Stored created invoice with UUID: {}", createdInvoiceUuid);
}

@When("I send a PUT request to edit the invoice")
public void editInvoice() {
    // 1. Construct edit URL with the UUID parameter
    String editUrl = baseUrl2 + "/invoices/" + createdInvoiceUuid;
    logger.info("Edit URL: {}", editUrl);

    // 2. Create modified invoice (copy original + make changes)
    InvoicePayableModel editRequest = new InvoicePayableModel();
    BeanUtils.copyProperties(originalInvoice, editRequest);
    
    // 3. Make minimal required changes
    editRequest.setInvoiceStatus("EDITED");
    editRequest.setSsStatus("UPDATED");
    editRequest.setLastUpdateDate(LocalDate.now());
    editRequest.setLastUpdatedByUser("test-automation");

    // 4. Send PUT request
    editResponseEntity = restTemplate.exchange(
        editUrl,
        HttpMethod.PUT,
        new HttpEntity<>(editRequest, headers),
        InvoicePayableModel.class
    );
    
    logger.info("Edit response status: {}", editResponseEntity.getStatusCode());
}

@Then("the edit response status code should be 200")
public void verifyEditStatusCode() {
    assertNotNull(editResponseEntity);
    assertEquals(HttpStatus.OK, editResponseEntity.getStatusCode());
}

@Then("the response should contain updated invoice details")
public void verifyUpdatedDetails() {
    InvoicePayableModel editedInvoice = editResponseEntity.getBody();
    
    // Verify UUID remains the same
    assertEquals(createdInvoiceUuid, editedInvoice.getId().toString());
    
    // Verify updated fields
    assertEquals("EDITED", editedInvoice.getInvoiceStatus());
    assertEquals("UPDATED", editedInvoice.getSsStatus());
    assertEquals(LocalDate.now(), editedInvoice.getLastUpdateDate());
    assertEquals("test-automation", editedInvoice.getLastUpdatedByUser());
}