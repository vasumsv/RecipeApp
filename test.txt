@Test
void transferFile_CoversTargetLines() throws Exception {
    // 1. Access private method via reflection
    Method method = AbDomain.class.getDeclaredMethod(
        "transferFile", 
        LocalDate.class, 
        List.class
    );
    method.setAccessible(true);

    // 2. Initialize FULLY-POPULATED CashAllocationModel
    CashAllocationModel model = new CashAllocationModel();
    model.setInvoiceMatched("INV001");
    
    // 3. Initialize InvoicesAbList to avoid NPE
    InvoicesAbList invoicesAbList = new InvoicesAbList();
    invoicesAbList.setInvoicesAb(List.of("INV001")); // Critical for buildLine()
    model.setInvoicesAbList(invoicesAbList); // Set the list

    // 4. Configure directory and key
    ReflectionTestUtils.setField(abDomain, "directoryName", "target/test-files");
    ReflectionTestUtils.setField(abDomain, "abftrKey", "TESTKEY");

    // 5. Execute method
    String result = (String) method.invoke(
        abDomain, 
        LocalDate.now(), 
        Collections.singletonList(model)
    );

    // 6. Verify
    assertNotNull(result);
    File outputFile = new File("target/test-files/" + result);
    assertTrue(outputFile.exists());
}