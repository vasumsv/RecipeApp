public void ISendApiRequestToEditTheInvoice() throws JsonProcessingException {
    logger.info("Entering ISendApiRequestToEditTheInvoice method...");

    // --- Ensure originalInvoice is not null and we have its ID ---
    if (originalInvoice == null || originalInvoice.getId() == null) {
        logger.error("Error: originalInvoice is null or its ID is not set. Cannot edit.");
        // You might want to throw an exception here or handle this scenario appropriately
        throw new IllegalStateException("Cannot edit invoice as the original invoice details are missing.");
    }

    // --- Construct the edit URL using the ID of the original invoice ---
    String editUrlWithId = editUrl.replace("{invoiceId}", originalInvoice.getId().toString());
    logger.info("Edit URL: {}", editUrlWithId);

    // --- Initialize the editedInvoice object ---
    InvoicePayableModel editedInvoice = new InvoicePayableModel();
    editedInvoice.setInvoiceStatus("EDITED");
    editedInvoice.setUpdatedBy(LocalDateTime.now());
    editedInvoice.setDescription("updated description - " + LocalDateTime.now());

    // --- Make the PUT request ---
    HttpHeaders headers = new HttpHeaders();
    headers.setContentType(MediaType.APPLICATION_JSON); // Assuming you're sending JSON
    // Add any authorization headers if needed
    // headers.set("Authorization", "Bearer " + accessToken); // Example

    HttpEntity<InvoicePayableModel> requestEntity = new HttpEntity<>(editedInvoice, headers);

    try {
        editResponseEntity = restTemplate.exchange(
                editUrlWithId, // Use the URL with the specific invoice ID
                HttpMethod.PUT,
                requestEntity,
                InvoicePayableModel.class
        );
        logger.info("Edit invoice request sent. Status: {}", editResponseEntity.getStatusCode());
    } catch (Exception e) {
        logger.error("Error during edit invoice request: {}", e.getMessage(), e);
        throw e; // Re-throw the exception for Cucumber to handle
    }
}