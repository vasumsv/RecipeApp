 @edit 
  Scenario: Edit existing invoice
    Given I have a successfully created invoice
    When I send a PUT request to edit the invoice
    Then the edit response status code should be 200
    And the response should contain updated invoice details


    // Add these methods to your existing InvoiceForPayableSteps class

@Given("I have a successfully created invoice")
public void iHaveASuccessfullyCreatedInvoice() {
    // This step assumes the creation was already done in previous scenario
    assertNotNull(responseEntity);
    assertNotNull(responseEntity.getBody());
    this.invoiceReference = responseEntity.getBody().getInvoiceReference();
}

@When("I send a PUT request to edit the invoice")
public void iSendPutRequestToEditInvoice() throws IOException {
    // Get the edit endpoint URL (from controller: "/invoices/{wuid}")
    String url = baseUrl2 + "/invoices/" + invoiceReference;
    
    // Use the creation response as base for editing
    InvoicePayableModel editPayload = responseEntity.getBody();
    
    // Make minimal changes - example: update status
    editPayload.setInvoiceStatus("EDITED");
    editPayload.setSsStatus("UPDATED");
    
    // Prepare request with OAuth2 principal (as required by API)
    HttpEntity<InvoicePayableModel> requestEntity = new HttpEntity<>(editPayload, headers);
    
    editResponseEntity = restTemplate.exchange(
        url,
        HttpMethod.PUT,
        requestEntity,
        InvoicePayableModel.class
    );
    
    logger.info("Invoice edit response: {}", editResponseEntity.getStatusCode());
}

@Then("the edit response status code should be {int}")
public void theEditResponseStatusCodeShouldBe(int expectedStatusCode) {
    assertNotNull(editResponseEntity);
    assertEquals(expectedStatusCode, editResponseEntity.getStatusCode().value());
}

@Then("the response should contain updated invoice details")
public void theResponseShouldContainUpdatedInvoiceDetails() {
    InvoicePayableModel editedInvoice = editResponseEntity.getBody();
    assertNotNull(editedInvoice);
    assertEquals("EDITED", editedInvoice.getInvoiceStatus());
    assertEquals("UPDATED", editedInvoice.getSsStatus());
    assertEquals(invoiceReference, editedInvoice.getInvoiceReference());
}