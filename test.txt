@Test
void transferFile_CoversLines143To155() throws Exception {
    // Access private method via reflection
    Method transferFileMethod = AbDomain.class.getDecledaredMethod(
        "transferFile", 
        LocalDate.class, 
        List.class
    );
    transferFileMethod.setAccessible(true);

    // Setup test data
    LocalDate date = LocalDate.now();
    CashAllocationModel model = new CashAllocationModel();
    model.setInvoiceMatched("INV001");

    // Inject values via reflection (CORRECT FIELD NAMES)
    ReflectionTestUtils.setField(abDomain, "directoryName", "target/test-files");
    ReflectionTestUtils.setField(abDomain, "abftrKey", "TESTKEY"); // Fix: "abftrKey" â†’ "abftrKey"

    // Invoke private method
    String result = (String) transferFileMethod.invoke(
        abDomain, 
        date, 
        Collections.singletonList(model)
    );

    // Verify
    assertNotNull(result);
    assertTrue(result.contains("TESTKEY.ABA_PAID_INVOICES"));
}