  @Test
    void getNettedRows_WhenGetPaymentDatesThrowsException_ReturnsComment() {
        // Setup payment list with required data
        List<InvoicePayableModelForPayment> paymentList = new ArrayList<>();
        InvoicePayableModelForPayment payment = new InvoicePayableModelForPayment();
        payment.setProviderId("123");
        payment.setFecCategory("CAT1"); // Fixed method name (was setFeecategory)
        payment.setInvoiceReference("INV_REF");
        payment.setEntity("ENTITY_01"); // Added to fix NPE
        payment.setCurrency("USD"); // Added to fix potential NPE
        paymentList.add(payment);

        // Mock invoices with required fields
        InvoicePayableModel invoice = new InvoicePayableModel();
        invoice.setProviderId("123");
        invoice.setEntity("ENTITY_01");
        invoice.setCurrency("USD");
        when(invoiceServiceApi.getListOfInvoices(anyList()))
            .thenReturn(Collections.singletonList(invoice));

        // Mock exception for payment dates
        when(referentialServiceApi.getPaymentDates(
            anyString(), anyString(), anyString(), 
            anyString(), anyString(), anyString()
        )).thenThrow(new RuntimeException("DB error"));

        List<PaymentLinesModel> result = cashAllocationDomain.getNettedRows(paymentList, "user");

        assertEquals(1, result.size());
        assertTrue(result.get(0).getComment().contains("Payment Dates unavailable for entity"));
    }