 @Test
    void cashAllocationModelList_CoversAllLines() {
        // 1. Create test data for all scenarios
        List<String> lines = Arrays.asList(
            // Case 1: Normal line with length >515
            "1VALID_ACCT_1234567890XXXX20231031REF1234567890  D000000012345678901234567890INVREFERENCELONG".replace(" ", "").toUpperCase(Locale.FRENCH),

            // Case 2: Line triggering ignore conditions
            "2SHORTLINE_T".toUpperCase(Locale.FRENCH),

            // Case 3: GAIA_WKB_FILE account
            "1" + CashAllocationDomain.ACCOUNT_NUMBER_1 + "20231031REF1234567890  D000000012345678901234567890INVREF".replace(" ", "").toUpperCase(Locale.FRENCH),

            // Case 4: GAIA_WKB_EEFE_FILE account
            "1300030697XXXXXXX20231031REF1234567890  D000000012345678901234567890INVREF".replace(" ", "").toUpperCase(Locale.FRENCH),

            // Case 5: Bad date format
            "1BAD_ACCT_XXXXXXXXXXXX2023xx31REF1234567890  D000000012345678901234567890INVREF".replace(" ", "").toUpperCase(Locale.FRENCH),

            // Case 6: Invalid amount format
            "1BAD_AMOUNT_ACCTXXXX20231031REF1234567890  DXXXXXX12345678901234567890INVREF".replace(" ", "").toUpperCase(Locale.FRENCH)
        );

        // 2. Execute method with mixed scenarios
        List<CashAllocationModel> result = cashAllocationDomain.cashAllocationModelList(
            lines,
            "GAIA_WKB_FILE" // Test GAIA file handling
        );

        // 3. Verify basic outcomes
        assertTrue(result.size() >= 2); // At least 2 valid models
    }