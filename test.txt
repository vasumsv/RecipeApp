@Test
void testTransferFileLines154To159() throws Exception {
    // Setup
    LocalDate date = LocalDate.now();
    List<CashAllocationModel> models = new ArrayList<>();
    
    // Create model that triggers the condition: invoiceMatched starts with "RSF-", exists in invoices, and has counterpartyId
    CashAllocationModel model = new CashAllocationModel();
    model.setInvoiceMatched("RSF-123ngpwc 456"); // Contains split delimiter
    model.setCounterPartyId("CP123");
    models.add(model);

    // Mock dependencies
    when(invoiceServiceApi.getADInvoice(anyString())).thenReturn(new InvoiceABList());
    
    // Force the invoices list to already contain the invoice (line 157 condition)
    List<String> invoices = new ArrayList<>();
    invoices.add("RSF-123ngpwc 456"); // Makes invoices.contains(...) true
    
    // Use reflection to inject the invoices list into the domain instance
    Field invoicesField = AbDomain.class.getDeclaredField("invoices");
    invoicesField.setAccessible(true);
    invoicesField.set(abDomain, invoices);

    // Execute
    String filename = abDomain.transferFile(date, models);

    // Verify file operations occurred (line 154-155)
    verify(fileProcessingService, atLeastOnce()).writeToFile(any(), anyString());
    
    // Verify buildLine was called (line 159)
    verify(invoiceServiceApi).getADInvoice("456"); // After split by "ngpwc "
}