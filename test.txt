@Test
void getNettedPaymentRowsForManualPayment_CoversAllLines() {
    // 1. Initialize ALL required fields to avoid NPEs
    InvoicePayableModelForPayment payment = new InvoicePayableModelForPayment();
    payment.setInvoiceType("APPROVED"); // Must match valid status (not DRAFT/ANEWOED/CANCELLED)
    payment.setProviderId("PROV123");
    payment.setInvoiceReference("REF12345"); // Ensure length >=3 for substring(0,3)
    payment.setFeederCategory("CAT1");

    // 2. Initialize nested objects (e.g., InvoicePayable)
    InvoicePayable invoicePayable = new InvoicePayable();
    invoicePayable.setProviderMnemo("BROKER1");
    payment.setInvoicePayable(invoicePayable); // Avoids NPE in .getInvoicePayable().getProviderMnemo()

    // 3. Set other potential null fields (add these if they exist in your model)
    payment.setCurrency("USD"); // If used in GroupingKey
    payment.setEntity("ENTITY1"); // If used in GroupingKey

    List<InvoicePayableModelForPayment> paymentList = Collections.singletonList(payment);

    // 4. Mock external dependencies
    BapPayableModel bap = new BapPayableModel();
    bap.setPortfolio("PORTFOLIO1");
    when(invoiceServiceApi.getListOfBapDetailsForMultipleInvoices(any()))
        .thenReturn(Collections.singletonList(bap));

    // 5. Mock referential service responses
    PortfolioAdvanceDetailResponse portfolioDetails = new PortfolioAdvanceDetailResponse();
    portfolioDetails.setCodTrs("BDR123");
    when(referentialServiceApi.getPortfolioDetailsBasedOnMnemonic("PORTFOLIO1"))
        .thenReturn(portfolioDetails);

    SettlementsAccounts settlementAccount = new SettlementsAccounts();
    settlementAccount.setNumbertrg1("ACC123");
    when(referentialServiceApi.getSettlementsAccounts(anyString(), anyString(), anyString()))
        .thenReturn(Collections.singletonList(settlementAccount));

    // 6. Execute the method
    List<PaymentLinesModel> result = cashAllocationDomain
        .getNettedPaymentRowsForManualPayment(paymentList, "user1");

    // 7. Verify output
    assertFalse(result.isEmpty());
}