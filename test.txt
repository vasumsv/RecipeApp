@Test
void getNettedPaymentRowsForManualPayment_basicScenario() {
    List<InvoicePayableModel> invoicePayableList = new ArrayList<>();
    invoicePayableList.add(new InvoicePayableModel()); // Add a dummy object

    List<PaymentList> paymentList = new ArrayList<>();
    paymentList.add(new PaymentList()); // Add a dummy object

    String user = "testUser";

    when(invoiceServiceApi.getStoreAppReadAllMultipleInvoices(anyList())).thenReturn(new ArrayList<>());
    when(referentialServiceApi.getPortfolioDetailsBasedOnnemonic(anyString())).thenReturn(new PortfolioDetailsResponse()); // Add a dummy response
    when(referentialServiceApi.getSettlementAccounts(anyString(), anyString())).thenReturn(new ArrayList<>()); // Add a dummy response

    List<PaymentLinesModel> result = cashAllocationDomain.getNettedPaymentRowsForManualPayment(invoicePayableList, paymentList, user);

    assertNotNull(result); // Basic assertion to check if a result is returned
    // Add more assertions if needed for specific values
}


@Test
void getNettedPaymentRowsForManualPayment_mapPopulationAndIteration() {
    List<InvoicePayableModel> invoicePayableList = new ArrayList<>();
    InvoicePayableModel invoice1 = new InvoicePayableModel();
    invoice1.setCurrency("USD");
    invoice1.setInvoiceNumber("INV123");
    invoicePayableList.add(invoice1);

    InvoicePayableModel invoice2 = new InvoicePayableModel();
    invoice2.setCurrency("EUR");
    invoice2.setInvoiceNumber("INV456");
    invoicePayableList.add(invoice2);

    List<PaymentList> paymentList = new ArrayList<>();
    PaymentList payment = new PaymentList();
    payment.setProviderId("PID1");
    payment.setProviderMemo("Memo1");
    payment.setDates("2023-10-27");
    paymentList.add(payment);

    String user = "testUser";

    when(invoiceServiceApi.getStoreAppReadAllMultipleInvoices(anyList())).thenReturn(new ArrayList<>());
    when(referentialServiceApi.getPortfolioDetailsBasedOnnemonic(anyString())).thenReturn(new PortfolioDetailsResponse());
    when(referentialServiceApi.getSettlementAccounts(anyString(), anyString())).thenReturn(new ArrayList<>());

    List<PaymentLinesModel> result = cashAllocationDomain.getNettedPaymentRowsForManualPayment(invoicePayableList, paymentList, user);

    assertNotNull(result);
    // Add more assertions to check the contents of the result list, if necessary
}