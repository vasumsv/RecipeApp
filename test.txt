    @Test
    void testTransferFile_Lines131To145() throws Exception {
        AbDomain abDomain = new AbDomain(); // Assuming AbDomain has a default constructor

        // Mocking dependencies if any (e.g., CashAllocationModel, Invoice)
        CashAllocationModel cashAllocationModel = Mockito.mock(CashAllocationModel.class);
        Mockito.when(cashAllocationModel.getInvoiceMatched()).thenReturn("invoice1,invoice2");
        Mockito.when(cashAllocationModel.getInvoiceUnmatched()).thenReturn("invoice3");

        List<CashAllocationModel> cashAllocationModelList = new ArrayList<>();
        cashAllocationModelList.add(cashAllocationModel);

        // Setting up a dummy directory
        File dir = new File("testDir");
        dir.mkdir();

        // Setting up a dummy file
        String fileName = "testFile.csv";
        File file = new File(dir, fileName);
        FileOutputStream fos = new FileOutputStream(file);

        // Accessing the private method using reflection
        Method transferFileMethod = AbDomain.class.getDeclaredMethod("transferFile", File.class, List.class);
        transferFileMethod.setAccessible(true);

        // Invoking the method
        transferFileMethod.invoke(abDomain, dir, cashAllocationModelList);

        // Basic assertions to check if the file was written to (logic check, not content)
        assertTrue(file.length() > 0);

        // Cleanup
        file.delete();
        dir.delete();
    }